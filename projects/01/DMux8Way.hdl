// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
                                                                  010
                                                                  011
                                                                  100
                                                                  101
                                                                  110
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
    DMux(in=in, sel=sel[2], a=aOut, b=bOut);
    DMux4Way(in=aOut, sel=sel[0..1], a=a, b=b, c=c, d=d);
    DMux4Way(in=bOut, sel=sel[0..1], a=e, b=f, c=g, d=h);
    

/*  Not(in=sel[0], out=notS0);
    Not(in=sel[1], out=notS1);
    Not(in=sel[2], out=notS2);

    And(a=notS0, b=notS1, out=notS0AndNotS1);
    And(a=notS0AndNotS1, b=notS2, out=aOut);
    And(a=in, b=aOut, out=a);
    
    And(a=sel[0], b=notS1, out=s0AndNotS1);
    And(a=s0AndNotS1, b=notS2, out=bOut);
    And(a=in, n=bOut, out=b);
    
    And(a=notS0, b=sel[1], out=notS0AndS1);
    And(a=notS0AndS1, b=notS2, out=bOut);
    And(a=in, n=bOut, out=b);
    
    And(a=sel[0], b=notS1, out=s0AndNotS1);
    And(a=s0AndNotS1, b=notS2, out=bOut);
    And(a=in, n=bOut, out=b);
    
    And(a=sel[0], b=notS1, out=s0AndNotS1);
    And(a=s0AndNotS1, b=notS2, out=bOut);
    And(a=in, n=bOut, out=b);
    
    And(a=sel[0], b=notS1, out=s0AndNotS1);
    And(a=s0AndNotS1, b=notS2, out=bOut);
    And(a=in, n=bOut, out=b);
    
    And(a=sel[0], b=notS1, out=s0AndNotS1);
    And(a=s0AndNotS1, b=notS2, out=bOut);
    And(a=in, n=bOut, out=b);
    
    And(a=sel[0], b=notS1, out=s0AndNotS1);
    And(a=s0AndNotS1, b=notS2, out=bOut);
    And(a=in, n=bOut, out=b);
 */    

    
}
